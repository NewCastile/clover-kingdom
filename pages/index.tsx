/** @format */

import Head from "next/head";
import { Text, Link as ChakraLink, VStack, Grid, GridItem } from "@chakra-ui/react";
import NextLink from "next/link";
import { MongoClient } from "mongodb";
import { InferGetStaticPropsType } from "next";
import { createContext } from "react";
import { useRouter } from "next/router";

import { MangaDocument } from "../types";
import styles from "../styles/Home.module.css";
import TruncatedText from "../components/TruncatedText";

export const MangaContext = createContext<MangaDocument>({} as MangaDocument);

export const getServerSideProps = async () => {
  const dbURI = process.env.MONGODB_URI;

  try {
    const connection = await MongoClient.connect(dbURI as string)
      .then((client) => client)
      .catch(() => {
        throw new Error("Error al conectar con la base de datos");
      });

    const db = connection.db("manga-reader-database");
    const dbCollection = db.collection<MangaDocument>("mangas");

    if (!dbCollection) throw new Error("Error la colecci칩n de mangas en la base de datos");
    const mangas = await dbCollection
      .find(
        {},
        {
          projection: {
            name: 1,
            content: 1,
            description: 1,
            periodity: 1,
            state: 1,
            _id: 0,
          },
        },
      )
      .toArray();

    return {
      props: {
        mangas,
      },
    };
  } catch (err: any) {
    return {
      props: {
        message: "Ha ocurrido un error durante la conexi칩n a la base de datos",
      },
    };
  }
};

const Home = ({ mangas, message }: InferGetStaticPropsType<typeof getServerSideProps>) => {
  const router = useRouter();

  return (
    <div className={styles.container}>
      <Head>
        <title>Clover Kingdom</title>
        <meta content="Generated by create next app" name="description" />
        <link href="/favicon.ico" rel="icon" />
      </Head>
      <main className={styles.main}>
        <VStack width={"100%"}>
          {mangas && (
            <Grid
              gap={6}
              gridAutoRows={"1fr"}
              maxWidth={"100vw"}
              templateColumns={{ base: "1fr", xl: "repeat(2, 1fr)" }}
              w={{ base: "100%", md: "80%", xl: "50%" }}
            >
              {mangas.map((manga, mangaIdx) => {
                return (
                  <GridItem key={mangaIdx} border={"1px solid"} borderRadius={"1rem"} p={"2rem"}>
                    <VStack h={"100%"} justify={"space-between"} spacing={"1rem"}>
                      <NextLink href={`/${manga.name}`}>
                        <ChakraLink
                          as={"h1"}
                          fontSize={"5xl"}
                          fontWeight="bold"
                          textAlign={"center"}
                          width={"100%"}
                        >
                          {manga.name}
                        </ChakraLink>
                      </NextLink>
                      <TruncatedText align={"center"} truncatedLines={8}>
                        {manga.description}
                      </TruncatedText>
                      <Text
                        as={"small"}
                        backgroundColor={
                          manga.state === "En emisi칩n" ? "pastel-green" : "pastel-blue"
                        }
                        border={"1px solid"}
                        borderRadius={"1rem"}
                        color={"pastel-black"}
                        fontWeight={"bold"}
                        p={"0.5rem 1rem"}
                      >
                        {manga.state}
                      </Text>
                    </VStack>
                  </GridItem>
                );
              })}
            </Grid>
          )}
          {message && (
            <Text>
              {message}. Intenta de nuevo{" "}
              <Text
                _hover={{ cursor: "pointer" }}
                as={"strong"}
                textDecoration={"underline"}
                onClick={() => router.reload()}
              >
                recargando la p치gina
              </Text>
              .
            </Text>
          )}
        </VStack>
      </main>
    </div>
  );
};

export default Home;
